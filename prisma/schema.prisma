generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Bank {
  bank_id   Int     @id @default(autoincrement())
  bank_name String? @db.VarChar(45)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Calender {
  rental_id            Int                     @id @default(autoincrement())
  fk_calender_customer Int
  fk_calender_product  Int
  rental_date          DateTime?               @default(now()) @db.DateTime(0)
  rental_end_date      DateTime?               @default(now()) @db.DateTime(0)
  rental_status        Calender_rental_status?

  @@index([fk_calender_customer], map: "FK_customer_id_idx")
  @@index([fk_calender_product], map: "FK_product_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Category {
  category_id       String   @id @db.VarChar(9)
  category_name     String   @db.VarChar(45)
  category_datetime DateTime @default(now()) @db.DateTime(0)
  category_update   DateTime @updatedAt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Chat {
  chat_id          Int       @id @default(autoincrement())
  fk_chat_customer Int
  fk_chat_store    Int
  chat_detail      String?   @db.Text
  chat_datetime    DateTime? @default(now()) @db.DateTime(0)

  @@index([fk_chat_customer], map: "FK_customer_id")
  @@index([fk_chat_store], map: "fk_chat_store_idx")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model County {
  county_id   Int    @id @default(autoincrement())
  county_name String @db.VarChar(40)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Customer {
  customer_id            Int      @id @default(autoincrement())
  fk_customer_proportion Int?
  name                   String   @db.VarChar(45)
  last_name              String   @db.VarChar(45)
  customer_email         String?  @unique(map: "customer_email_UNIQUE") @db.VarChar(45)
  customer_phone         String?  @unique(map: "customer_phone_UNIQUE") @db.VarChar(10)
  address                String?  @db.VarChar(255)
  id_card_number         Int?     @unique(map: "id_card_number_UNIQUE") @db.UnsignedInt
  card_image             Bytes?   @db.Blob
  username               String   @unique(map: "username_UNIQUE") @db.VarChar(30)
  password               String   @db.VarChar(255)
  customer_datetime      DateTime @default(now()) @db.DateTime(0)
  customer_update        DateTime @updatedAt

  @@index([fk_customer_proportion], map: "_idx")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Order {
  order_id          Int      @id @default(autoincrement())
  fk_order_customer Int
  total_price       Decimal  @db.Decimal(10, 2)
  deposit_amount    Decimal? @db.Decimal(10, 2)

  @@index([fk_order_customer], map: "fk_order_customer_idx")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Payment {
  payment_id       Int       @id @default(autoincrement())
  fk_payment_order Int
  fk_payment_pmt   Int
  fk_payment_bank  Int
  payment_date     DateTime? @default(now()) @db.DateTime(0)
  payment_amounf   Decimal   @db.Decimal(10, 2)
  payment_proof    Bytes?    @db.Blob

  @@index([fk_payment_bank], map: "fk_payment_bank_idx")
  @@index([fk_payment_order], map: "fk_payment_order_idx")
  @@index([fk_payment_pmt], map: "fk_payment_pmt_idx")
}

model Payment_method {
  payment_method_id   Int     @id @default(autoincrement())
  payment_method_name String? @db.VarChar(45)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Product {
  product_id          Int      @id @default(autoincrement())
  fk_product_store    Int
  fk_product_pp       Int?
  fk_product_category String   @db.VarChar(9)
  fk_product_county   Int
  product_name        String   @db.VarChar(45)
  price               Decimal  @db.Decimal(10, 2)
  shipping_info       String?  @db.VarChar(255)
  rental_period       DateTime @default(now()) @db.DateTime(0)
  product_update      DateTime @updatedAt

  @@index([fk_product_category], map: "category_id_idx")
  @@index([fk_product_county], map: "county_id_idx")
  @@index([fk_product_pp], map: "fk_product_pp_idx")
  @@index([fk_product_store], map: "store_id_idx")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Proportion {
  proportion_id     Int      @id @default(autoincrement())
  chest             Decimal? @db.Decimal(5, 1)
  waist             Decimal? @db.Decimal(5, 1)
  hips              Decimal? @db.Decimal(5, 1)
  proportion_update DateTime @updatedAt
}

model Proportion_product {
  proportion_product_id Int      @id @default(autoincrement())
  chest                 Decimal? @db.Decimal(5, 1)
  waist                 Decimal? @db.Decimal(5, 1)
  hips                  Decimal? @db.Decimal(5, 1)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Report {
  report_id         Int       @id @default(autoincrement())
  fk_report_product Int
  fk_report_rental  Int
  report_topics     String    @db.Text
  report_detail     String?   @db.Text
  report_file       Bytes?    @db.Blob
  report_fine       Decimal?  @db.Decimal(10, 2)
  report_datetime   DateTime? @default(now()) @db.DateTime(0)

  @@index([fk_report_product], map: "fk_report_product_idx")
  @@index([fk_report_rental], map: "fk_report_rental_idx")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Review {
  review_id          Int       @id @default(autoincrement())
  fk_review_customer Int
  fk_review_product  Int
  review_details     String?   @db.Text
  review_datetime    DateTime? @default(now()) @db.DateTime(0)
  review_score       Int       @db.TinyInt
  review_file        Bytes?    @db.Blob

  @@index([fk_review_customer], map: "fk_review_customer_idx")
  @@index([fk_review_product], map: "fk_review_product_idx")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Shipping {
  shipping_id       Int                       @id @default(autoincrement())
  fk_shipping_order Int
  tracking          String                    @db.VarChar(13)
  shipping_date     DateTime?                 @db.DateTime(0)
  shipping_status   Shipping_shipping_status?
  shipping_name     String?                   @db.VarChar(45)
  shipping_end_date DateTime?                 @default(now()) @db.DateTime(0)

  @@index([fk_shipping_order], map: "fk_shipping_order_idx")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Store {
  store_id    Int     @id @default(autoincrement())
  store_name  String  @db.VarChar(45)
  store_email String? @db.VarChar(45)
  store_phone String? @db.VarChar(10)
}

enum Shipping_shipping_status {
  IN_PROGRESS @map("กำลังจัดส่ง")
  DELIVERED   @map("จัดส่งสำเร็จ")
}

enum Calender_rental_status {
  PENDING_PAYMENT @map("รอชำระเงิน")
  RENTED          @map("กำลังเช่า")
  RETURNED        @map("คืนแล้ว")
  CANCELLED       @map("ยกเลิก")
}
