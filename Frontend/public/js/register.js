document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById("RegisForm");
    if (!form) return console.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏° RegisForm");
  
    form.addEventListener("submit", async (e) => {
      e.preventDefault();
      clearErrors();
  
      const name = document.getElementById("name")?.value.trim();
      const last_name = document.getElementById("last_name")?.value.trim();
      const phone = document.getElementById("phone")?.value.trim();
      const email = document.getElementById("email")?.value.trim();
      const username = document.getElementById("username")?.value.trim();
      const password = document.getElementById("password")?.value;
      const confirmPassword = document.getElementById("confirm_password")?.value;
      const birthday = document.getElementById("birthday")?.value.trim();
      const id_card_number = document.getElementById("id_card_number")?.value.trim();
  
      // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏ü‡∏¥‡∏•‡∏î‡πå
      if (!name || !last_name || !phone || !email || !username || !password || !confirmPassword) {
        document.getElementById("form-error").textContent = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏≠‡∏á";
        return;
      }
  
      // ‚úÖ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
      if (password.length < 8) {
        showFieldError("password", "‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 8 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£");
        return;
      }
  
      // ‚úÖ confirm password
      if (password !== confirmPassword) {
        showFieldError("confirm_password", "‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô");
        return;
      }
  
      // ‚úÖ ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ 10 ‡∏´‡∏•‡∏±‡∏Å
      if (!/^\d{10}$/.test(phone)) {
        showFieldError("phone", "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå 10 ‡∏´‡∏•‡∏±‡∏Å");
        return;
      }
  
      // ‚úÖ ‡∏≠‡∏µ‡πÄ‡∏°‡∏•
      if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) {
        showFieldError("email", "‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
        return;
      }
  
      // ‚úÖ ‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô 13 ‡∏´‡∏•‡∏±‡∏Å
      if (id_card_number && !/^\d{13}$/.test(id_card_number)) {
        showFieldError("id_card_number", "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô 13 ‡∏´‡∏•‡∏±‡∏Å");
        return;
      }
  
      // ‚úÖ ‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î (‡∏≠‡∏≤‡∏¢‡∏∏ 16+)
      if (!birthday) {
        showFieldError("birthday", "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î");
        return;
      }
  
      const birthDate = new Date(birthday);
      const age = new Date().getFullYear() - birthDate.getFullYear();
      if (age < 16) {
        showFieldError("birthday", "‡∏≠‡∏≤‡∏¢‡∏∏‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 16 ‡∏õ‡∏µ");
        return;
      }
  
      // ‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ backend
      const formData = {
        name,
        last_name,
        customer_phone: phone,
        customer_email: email,
        username,
        password,
        confirm_password: confirmPassword,
        id_card_number,
        birthday,
      };
  
      try {
        const res = await fetch("/api/register", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(formData),
        });
  
        const data = await res.json();
        console.log("üì• Response:", res.status, data);
  
        if (res.ok) {
          window.location.href = "/login";
        } else {
          document.getElementById("form-error").textContent =
            data.message || "‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà";
        }
      } catch (err) {
        document.getElementById("form-error").textContent = "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ";
      }
    });
  
    function showFieldError(field, message) {
      const el = document.getElementById(`${field}-error`);
      if (el) el.textContent = message;
    }
  
    function clearErrors() {
      document.querySelectorAll(".error-text").forEach((el) => (el.textContent = ""));
      document.getElementById("form-error").textContent = "";
    }
  
    const fieldLabels = {
      username: "‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ",
      email: "‡∏≠‡∏µ‡πÄ‡∏°‡∏•",
      phone: "‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå",
      id_card_number: "‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô",
    };
  
    async function checkDuplicate(field, value) {
      if (!value) return;
      try {
        const res = await fetch(`/api/register/check?field=${field}&value=${encodeURIComponent(value)}`);
        const data = await res.json();
  
        if (data.exists) {
          showFieldError(field, `${fieldLabels[field]} ‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß`);
        } else {
          showFieldError(field, "");
        }
      } catch (err) {
        console.error("Error checking duplicate:", err);
      }
    }
  
    // === blur events ===
    ["username", "email", "phone", "id_card_number"].forEach((id) => {
      const el = document.getElementById(id);
      if (el) el.addEventListener("blur", (e) => checkDuplicate(id, e.target.value));
    });
  
    // === toggle password ===
    const togglePassword = document.getElementById("togglePassword");
    const passwordInput = document.getElementById("password");
    if (togglePassword && passwordInput) {
      togglePassword.addEventListener("click", () => {
        const type = passwordInput.type === "password" ? "text" : "password";
        passwordInput.type = type;
        togglePassword.classList.toggle("bx-show");
        togglePassword.classList.toggle("bx-hide");
      });
    }
  
    const toggleConfirmPassword = document.getElementById("toggleConfirmPassword");
    const confirmPasswordInput = document.getElementById("confirm_password");
    if (toggleConfirmPassword && confirmPasswordInput) {
      toggleConfirmPassword.addEventListener("click", () => {
        const type = confirmPasswordInput.type === "password" ? "text" : "password";
        confirmPasswordInput.type = type;
        toggleConfirmPassword.classList.toggle("bx-show");
        toggleConfirmPassword.classList.toggle("bx-hide");
      });
    }
  });
  