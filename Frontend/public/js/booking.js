// ============================
// üìÖ booking.js ‚Äì ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Detail_Pro.ejs
// ============================

// üåà ‡πÇ‡∏´‡∏°‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
let mode = "test";
let isSettingDate = false;

// ============================
// üîî ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô tooltip ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
// ============================
function showTooltip(message) {
  const tooltip = document.createElement("div");
  tooltip.className = "tooltip-alert";
  tooltip.textContent = message;
  document.body.appendChild(tooltip);
  setTimeout(() => tooltip.classList.add("show"), 10);
  setTimeout(() => {
    tooltip.classList.remove("show");
    setTimeout(() => tooltip.remove(), 500);
  }, 2500);
}

// ============================
// üéö ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÇ‡∏´‡∏°‡∏î ‡πÄ‡∏ó‡∏™ / ‡πÑ‡∏û‡∏£
// ============================
document.querySelectorAll("input[name=mode]").forEach(radio => {
  radio.addEventListener("change", e => {
    mode = e.target.value;

    const calendarEl = document.querySelector("#calendar");
    if (calendarEl && calendarEl._flatpickr) {
      calendarEl._flatpickr.clear();
    }

    showTooltip("‡πÇ‡∏´‡∏°‡∏î‡πÄ‡∏ä‡πà‡∏≤‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà ‚ú®");
    console.log("üîÑ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÇ‡∏´‡∏°‡∏î‡πÄ‡∏õ‡πá‡∏ô:", mode);
  });
});

// ============================
// üì¶ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏à‡∏≤‡∏Å backend
// ============================
async function loadBookings(productId) {
  try {
    const res = await fetch(`/api/rentals/product/${productId}`);
    if (!res.ok) throw new Error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ");
    const data = await res.json();

    const bookings = data.map(b => ({
      start: fixLocalDate(b.start),
      end: fixLocalDate(b.end),
    }));

    function fixLocalDate(dateStr) {
      // ‚úÖ ‡πÑ‡∏°‡πà‡πÅ‡∏ï‡∏∞ timezone offset ‚Äî ‡πÉ‡∏ä‡πâ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å backend ‡∏ï‡∏£‡∏á ‡πÜ
      const d = new Date(dateStr);
      d.setHours(0, 0, 0, 0); // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏±‡∏ô‡πÄ‡∏´‡∏•‡∏∑‡πà‡∏≠‡∏°‡∏ß‡∏±‡∏ô
      return d;
    }



    setupCalendar(bookings);
  } catch (err) {
    console.error("‚ùå loadBookings error:", err);
    setupCalendar([]);
  }
}

// ============================
// üßÆ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô disable ‡∏à‡∏≤‡∏Å delaySetting
// ============================
async function computeDisabledRanges(bookings, delay) {
  return bookings.map(b => {
    const start = new Date(b.start);
    const end = new Date(b.end);

    const startMinus = new Date(start);
    startMinus.setDate(start.getDate() - delay.delay_ship_days);

    const endPlus = new Date(end);
    endPlus.setDate(
      end.getDate() +
      delay.delay_return_days +
      delay.delay_clean_days +
      delay.delay_ship_days
    );

    function formatDateLocal(date) {
      const d = new Date(date.getTime() - date.getTimezoneOffset() * 60000);
      return d.toISOString().split("T")[0];
    }

    return {
      from: formatDateLocal(startMinus),
      to: formatDateLocal(endPlus),
    };
  });
}

// ============================
// üìÜ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á Flatpickr + logic ‡∏Å‡∏±‡∏ô‡∏ß‡∏±‡∏ô
// ============================
async function setupCalendar(bookings = []) {
  const today = new Date();
  today.setHours(0, 0, 0, 0);

  const delay = await fetch("/api/delay-setting").then(r => r.json());
  console.log("üïí Delay Setting:", delay);

  // ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ß‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏ä‡πà‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏£‡πá‡∏ß‡∏™‡∏∏‡∏î (‡∏Å‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô + ‡∏™‡πà‡∏á)
  const minSelectable = new Date(today);
  minSelectable.setDate(today.getDate() + delay.delay_ship_days + delay.delay_admin_days);

  // ‚úÖ ‡πÉ‡∏´‡πâ‡∏à‡∏≠‡∏á‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 3 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
  const maxSelectable = new Date(today);
  maxSelectable.setMonth(today.getMonth() + 3);
  maxSelectable.setDate(maxSelectable.getDate() + 1); // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° 1 ‡∏ß‡∏±‡∏ô


  // ‚úÖ disable ‡∏ß‡∏±‡∏ô‡∏Ñ‡∏¥‡∏ß‡∏ó‡∏µ‡πà‡∏ó‡∏±‡∏ö
  const disabledRanges = await computeDisabledRanges(bookings, delay);

  // ‚úÖ ‡∏´‡∏≤‡∏ß‡∏±‡∏ô‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏à‡∏≠‡∏á‡πÑ‡∏ß‡πâ
  const latestEnd = bookings.reduce((latest, b) => {
    const end = new Date(b.end);
    const cleanEnd = new Date(end);
    cleanEnd.setDate(
      end.getDate() +
      delay.delay_return_days +
      delay.delay_clean_days +
      delay.delay_next_ship_days
    );
    return cleanEnd > latest ? cleanEnd : latest;
  }, today);

  // ‚úÖ ‡∏ö‡∏•‡πá‡∏≠‡∏Å‡∏ä‡πà‡∏ß‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏•‡∏¢‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏£‡∏≠ alert
  if (latestEnd > today) {
    disabledRanges.push({
      from: today.toISOString().split("T")[0],
      to: latestEnd.toISOString().split("T")[0],
    });
  }

  // ============================
  // ü©∂ Disable calendar ‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡∏≠‡∏á‡πÄ‡∏ä‡πà‡∏≤
  // ============================
  const calendarEl = document.querySelector("#calendar");

  // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô: ‡πÄ‡∏ó‡∏≤‡πÅ‡∏•‡∏∞‡∏Å‡∏î‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ
  calendarEl.classList.add("disabled-calendar");
  calendarEl.style.pointerEvents = "none";
  calendarEl.style.opacity = "0.5"; // ‡∏™‡∏µ‡∏à‡∏≤‡∏á‡πÜ‡∏´‡∏ô‡πà‡∏≠‡∏¢

  // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡∏≠‡∏á‡πÄ‡∏ä‡πà‡∏≤ ‚Üí ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô
  document.querySelector("select[name=components]").addEventListener("change", () => {
    calendarEl.classList.remove("disabled-calendar");
    calendarEl.style.pointerEvents = "auto";
    calendarEl.style.opacity = "1";
  });


  // ============================
  // üóìÔ∏è Flatpickr setup
  // ============================
  const calendar = flatpickr("#calendar", {
    inline: true,
    mode: "range",
    dateFormat: "Y-m-d",
    minDate: minSelectable,
    maxDate: maxSelectable,
    disable: disabledRanges,

    // üíÖ ‡∏™‡∏µ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡πà‡∏ß‡∏á
    onDayCreate: function (_, __, ___, dayElem) {
      const d = dayElem.dateObj;
      bookings.forEach(b => {
        const start = new Date(b.start);
        const end = new Date(b.end);

        const shipBeforeStart = new Date(start);
        shipBeforeStart.setDate(start.getDate() - delay.delay_ship_days);

        const afterReturn = new Date(end);
        afterReturn.setDate(end.getDate() + delay.delay_return_days);

        const cleanEnd = new Date(end);
        cleanEnd.setDate(end.getDate() + delay.delay_return_days + delay.delay_clean_days);

        const nextShip = new Date(cleanEnd);
        nextShip.setDate(cleanEnd.getDate() + delay.delay_ship_days);

        const rentEnd = new Date(end);
        rentEnd.setDate(end.getDate() + 1);

        if (d >= shipBeforeStart && d < start);
        else if (d >= start && d < rentEnd) dayElem.classList.add("day-rent");
        else if (d > end && d <= afterReturn);
        else if (d > afterReturn && d <= cleanEnd);
        else if (d > cleanEnd && d <= nextShip);
      });
    },

    // üìÖ ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô
    onChange: function (selectedDates, _, instance) {
      if (isSettingDate) return;

      if (selectedDates.length === 1) {
        const start = selectedDates[0];
        const daysDiff = Math.floor((start - today) / (1000 * 60 * 60 * 24));

        const mode = document.querySelector("input[name=mode]:checked")?.value;
        const component = document.querySelector("select[name=components]")?.value;

        if (!component) {
          showTooltip("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡∏≠‡∏á‡πÄ‡∏ä‡πà‡∏≤‡∏Å‡πà‡∏≠‡∏ô");
          instance.clear();
          return;
        }
        

        // ‚úÖ ‡∏´‡πâ‡∏≤‡∏°‡∏à‡∏≠‡∏á‡πÄ‡∏£‡πá‡∏ß‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ
        if (daysDiff < (delay.delay_ship_days + delay.delay_admin_days)) {
          alert(`‚õî ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏ä‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏´‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ ${delay.delay_ship_days + delay.delay_admin_days} ‡∏ß‡∏±‡∏ô`);
          instance.clear();
          return;
        }

        // üö´ ‡∏´‡πâ‡∏≤‡∏°‡∏à‡∏≠‡∏á‡∏ã‡πâ‡∏≥‡∏£‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤
        if (start <= latestEnd) {
          alert("‚õî ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏¢‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ö‡∏•‡πá‡∏≠‡∏Ñ‡∏Ç‡∏≠‡∏á‡∏£‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤");
          instance.clear();
          return;
        }

        isSettingDate = true;
        const end = new Date(start);

        const mapping = {
          "suit": "suit",
          "wig": "wig",
          "set-wig": "suit_wig",
          "set-wig-prop": "suit_wig_prop",
          "set-wig-shoe": "suit_wig_shoe",
          "set-wig-prop-shoe": "suit_wig_prop_shoe",
          "prop": "solo_prop",
          "shoe": "solo_shoe"
        };

        const dbType = mapping[component];
        const selected = productPrices.find(p => p.type === dbType);

        const rentalDays = mode === "test"
          ? (selected?.days_test || 1)
          : (selected?.days_pri || 1);

        end.setDate(start.getDate() + (rentalDays - 1));
        instance.setDate([start, end], true);
        isSettingDate = false;

        console.log(`üìÖ ‡πÇ‡∏´‡∏°‡∏î: ${mode}, ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ä‡πà‡∏≤: ${component}, ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡πÄ‡∏ä‡πà‡∏≤: ${rentalDays}`);
      }
    }

  });



  // üßπ ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÇ‡∏´‡∏°‡∏î
  document.querySelectorAll("input[name=mode]").forEach(radio => {
    radio.addEventListener("change", () => {
      mode = radio.value;
      calendar.clear();
      showTooltip("‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà ‚ú®");
    });
  });
}

// ============================
// üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
// ============================
window.addEventListener("load", () => {
  const calendarEl = document.querySelector("#calendar");
  if (!calendarEl) return console.warn("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö element #calendar");

  const productId = calendarEl.dataset.productId;
  console.log("üõ∞Ô∏è ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:", productId);
  loadBookings(productId);
});
