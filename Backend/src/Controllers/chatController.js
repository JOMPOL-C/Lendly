const db = require("../utils/firebase");

// üì© ‡∏î‡∏∂‡∏á‡πÅ‡∏ä‡∏ó‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô)
exports.getChats = async (req, res) => {
  try {
    const { userId } = req.user; // ‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å token
    const chatsRef = db.collection("chats");

    // üîπ ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô ‚Üí ‡πÄ‡∏´‡πá‡∏ô‡∏ó‡∏∏‡∏Å‡πÅ‡∏ä‡∏ó
    if (req.user.role === "ADMIN") {
      const snapshot = await chatsRef.get();
      const allChats = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));
      return res.json(allChats);
    }

    // üîπ ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô user ‚Üí ‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á
    const snapshot = await chatsRef.where("customerId", "==", userId).get();
    const myChats = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));
    res.json(myChats);
  } catch (err) {
    console.error("‚ùå getChats error:", err);
    res.status(500).json({ message: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏ä‡∏ó" });
  }
};

exports.getMessages = async (req, res) => {
    try {
      const { chatId } = req.params;
      const snapshot = await db
        .collection("chats")
        .doc(chatId)
        .collection("messages")
        .orderBy("createdAt", "asc")
        .get();
  
      const messages = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));
      res.json(messages);
    } catch (err) {
      console.error("‚ùå getMessages error:", err);
      res.status(500).json({ message: "‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÅ‡∏ä‡∏ó‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à" });
    }
  };

// üì§ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà
exports.sendMessage = async (req, res) => {
    try {
      const { chatId, message } = req.body;
      const { user } = req;
  
      if (!message) {
        return res.status(400).json({ message: "‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°" });
      }
  
      let chatDocId = chatId;
  
      // üß© ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡πâ‡∏≠‡∏á (‡πÑ‡∏°‡πà‡∏°‡∏µ chatId) ‚Üí ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
      if (!chatDocId) {
        const newChat = await db.collection("chats").add({
          customerId: user.customer_id,
          customerName: user.name, // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
          createdAt: new Date(),
          updatedAt: new Date(),
          lastMessage: message,
        });
        chatDocId = newChat.id;
      }
  
      const msgData = {
        senderId: user.customer_id,
        senderRole: user.role,
        message,
        createdAt: new Date(),
      };
  
      // üì® ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô subcollection messages
      await db
        .collection("chats")
        .doc(chatDocId)
        .collection("messages")
        .add(msgData);
  
      // üîÅ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏Å
      await db.collection("chats").doc(chatDocId).set(
        {
          lastMessage: message,
          updatedAt: new Date(),
        },
        { merge: true }
      );
  
      res.json({ message: "‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", chatId: chatDocId, data: msgData });
    } catch (err) {
      console.error("‚ùå sendMessage error:", err);
      res.status(500).json({ message: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏î‡πâ" });
    }
  };