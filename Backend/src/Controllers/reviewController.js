const prisma = require('../../prisma/prisma');
const cloudinary = require('cloudinary').v2;
const multer = require('multer');
const { CloudinaryStorage } = require('multer-storage-cloudinary');

// ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Cloudinary ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß
const storage = new CloudinaryStorage({
    cloudinary,
    params: {
        folder: 'reviews',
        allowed_formats: ['jpg', 'png', 'jpeg'],
    },
});
exports.upload = multer({ storage });

// ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏∑‡∏ô‡πÅ‡∏•‡πâ‡∏ß
exports.renderWriteReview = async (req, res) => {
    try {
        const customerId = req.user.customer_id;

        // ‡∏î‡∏∂‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ RETURNED ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
        const rentals = await prisma.rentals.findMany({
            where: {
                customerId,
                rental_status: 'RETURNED',
            },
            include: {
                product: {
                    include: { images: true },
                },
            },
            orderBy: { rental_id: 'desc' },
        });

        res.render('write_review', { rentals });
    } catch (err) {
        console.error('‚ùå renderWriteReview error:', err);
        res.status(500).send('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß');
    }
};

// ‚úÖ ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß
exports.createReview = async (req, res) => {
    try {
        const { reviewText, productId, rentalId } = req.body;
        const customerId = req.user.customer_id;

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πà‡∏≤‡∏à‡∏£‡∏¥‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∑‡∏ô‡πÅ‡∏•‡πâ‡∏ß
        const rental = await prisma.rentals.findUnique({
            where: { rental_id: parseInt(rentalId) },
        });

        console.log("üß© [DEBUG REVIEW]");
        console.log("customerId from token:", customerId);
        console.log("rentalId from body:", rentalId);
        console.log("productId from body:", productId);
        console.log("found rental:", rental);
        if (!rental || rental.customerId !== customerId || rental.rental_status !== 'RETURNED') {
            return res.status(400).json({ message: '‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ' });
        }

        const review = await prisma.review.create({
            data: {
                reviewText,
                productId: parseInt(productId),
                rentalId: parseInt(rentalId),
                customerId,
            },
        });

        // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏£‡∏π‡∏õ‡πÅ‡∏ô‡∏ö‡∏°‡∏≤
        if (req.files?.length) {
            const images = req.files.map(file => ({
                reviewId: review.review_id,
                image_url: file.path,
            }));
            await prisma.reviewImage.createMany({ data: images });
        }

        res.redirect('/all_review');
    } catch (err) {
        console.error('‚ùå createReview error:', err);
        res.status(500).json({ message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏µ‡∏ß‡∏¥‡∏ß' });
    }
};

// ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
exports.getAllReviews = async (req, res) => {
    try {
        const reviews = await prisma.review.findMany({
            include: {
                product: true,
                customer: {
                    select: {
                        name: true,
                        profile_image_url: true, // ‚úÖ field ‡πÄ‡∏Å‡πá‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå Cloudinary
                    },
                },
                images: true,
            },
            orderBy: { created_at: 'desc' },
        });

        // ‚úÖ ‡∏™‡πà‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ reviews ‡πÉ‡∏´‡πâ EJS ‡πÉ‡∏ä‡πâ
        res.render('all_review', { reviews });
    } catch (err) {
        console.error('‚ùå getAllReviews error:', err);
        res.status(500).send('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î');
    }
};
