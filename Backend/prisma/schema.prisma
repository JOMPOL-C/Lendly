generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//  ENUM SECTION

// ‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
enum Role {
  ADMIN
  USER
}

// ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á
enum Shipping_shipping_status {
  IN_PROGRESS @map("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡∏™‡πà‡∏á")
  RETURNING   @map("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏Ñ‡∏∑‡∏ô")
  DELIVERED   @map("‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
}

// ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πà‡∏≤‡∏ä‡∏∏‡∏î (‡πÉ‡∏ô‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô‡πÄ‡∏ä‡πà‡∏≤)
enum Calender_rental_status {
  Ready_Rental     @map("‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏ä‡πà‡∏≤")
  WAITING_CONFIRM  @map("‡∏£‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏à‡∏≤‡∏Å‡∏£‡πâ‡∏≤‡∏ô")
  RENTED           @map("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ä‡πà‡∏≤")
  RETURNED         @map("‡∏Ñ‡∏∑‡∏ô‡πÅ‡∏•‡πâ‡∏ß")
  CLEANING         @map("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î")
  Not_Ready_Rental @map("‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏ä‡πà‡∏≤")
  CANCELLED        @map("‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏ä‡πà‡∏≤")
}

enum RentalMode {
  TEST
  PRI
}

// ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
enum ProductPrice_status {
  suit               @map("‡∏ä‡∏∏‡∏î")
  wig                @map("‡∏ß‡∏¥‡∏Å")
  suit_wig           @map("‡∏ä‡∏∏‡∏î+‡∏ß‡∏¥‡∏Å")
  suit_wig_prop      @map("‡∏ä‡∏∏‡∏î+‡∏ß‡∏¥‡∏Å+‡∏û‡∏£‡πá‡∏≠‡∏û")
  suit_wig_shoe      @map("‡∏ä‡∏∏‡∏î+‡∏ß‡∏¥‡∏Å+‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤")
  suit_wig_prop_shoe @map("‡∏ä‡∏∏‡∏î+‡∏ß‡∏¥‡∏Å+‡∏û‡∏£‡πá‡∏≠‡∏û+‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤")
  addon_prop         @map("‡∏û‡∏£‡πá‡∏≠‡∏û‡πÄ‡∏™‡∏£‡∏¥‡∏°")
  addon_shoe         @map("‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤")
  solo_prop          @map("‡∏û‡∏£‡πá‡∏≠‡∏û‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß")
  solo_shoe          @map("‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß")
}

// ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
enum Notification_status {
  ORDER     @map("‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠")
  PAYMENT   @map("‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô")
  REVIEW    @map("‡∏£‡∏µ‡∏ß‡∏¥‡∏ß")
  PROMOTION @map("‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô")
}

// =======================
// USER & PROFILE SECTION
// =======================

// ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ (‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏•‡∏±‡∏Å)
model Customer {
  customer_id       Int       @id @default(autoincrement())
  name              String    @db.VarChar(45)
  last_name         String    @db.VarChar(45)
  customer_email    String?   @unique(map: "customer_email_UNIQUE") @db.VarChar(45)
  customer_phone    String?   @unique(map: "customer_phone_UNIQUE") @db.VarChar(10)
  address           String?   @db.VarChar(255)
  id_card_number    String?   @unique(map: "id_card_number_UNIQUE") @db.VarChar(13)
  username          String    @unique(map: "username_UNIQUE") @db.VarChar(30)
  password          String    @db.VarChar(255)
  customer_datetime DateTime  @default(now()) @db.DateTime(0)
  customer_update   DateTime  @default(now()) @updatedAt
  profile_image_url String?   @db.VarChar(255)
  profile_public_id String?   @db.VarChar(255)
  id_card_image_url String?   @db.VarChar(255)
  id_card_public_id String?   @db.VarChar(255)
  role              Role      @default(USER)
  birthday          DateTime? @db.Date

  age          Int?
  rentals      Rentals[]
  cart         Cart[]
  chats        Chat[]
  notification Notification[]
  orders       Orders[]
  proportion   Proportion?
  reviews      Review[]
  favorites    Favorite[]
}

// ‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ç‡∏ô‡∏≤‡∏î‡∏ä‡∏∏‡∏î
model Proportion {
  proportion_id     Int      @id @default(autoincrement())
  chest             Decimal? @db.Decimal(5, 1)
  waist             Decimal? @db.Decimal(5, 1)
  hips              Decimal? @db.Decimal(5, 1)
  proportion_update DateTime @updatedAt
  customerId        Int      @unique
  customer          Customer @relation(fields: [customerId], references: [customer_id])
}

// =============================
// üß∫ PRODUCT & CATEGORY SECTION
// =============================

// ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡πÄ‡∏ä‡πà‡∏ô ‡∏ä‡∏∏‡∏î‡∏Ñ‡∏≠‡∏™‡πÄ‡∏û‡∏•‡∏¢‡πå, ‡∏ß‡∏¥‡∏Å‡∏ú‡∏°)
model Category {
  category_id       String    @id @db.VarChar(9)
  category_name     String    @db.VarChar(45)
  category_datetime DateTime  @default(now()) @db.DateTime(0)
  category_update   DateTime  @updatedAt
  products          Product[]
}

// ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡∏ä‡∏∏‡∏î‡πÉ‡∏´‡πâ‡πÄ‡∏ä‡πà‡∏≤)
model Product {
  product_id     Int                 @id @default(autoincrement())
  ppId           Int?
  categoryId     String              @db.VarChar(9)
  product_name   String              @db.VarChar(100)
  shipping_info  String?             @db.VarChar(255)
  product_update DateTime            @updatedAt
  product_status Boolean             @default(true)
  story_name     String?             @db.VarChar(100)
  rentals        Rentals[]
  CartItem       CartItem[]
  OrderItem      OrderItem[]
  category       Category            @relation(fields: [categoryId], references: [category_id])
  size           Proportion_product? @relation(fields: [ppId], references: [proportion_product_id])

  images    ProductImage[]
  prices    ProductPrice[]
  reports   Report[]
  reviews   Review[]
  favorites Favorite[]

  @@index([categoryId], map: "category_id_idx")
  @@index([ppId], map: "fk_product_pp_idx")
}

//  ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
model ProductImage {
  image_id      Int     @id @default(autoincrement())
  image_url     String  @db.VarChar(255)
  cloudinary_id String  @db.VarChar(255)
  productId     Int
  product       Product @relation(fields: [productId], references: [product_id])

  @@index([productId], map: "ProductImage_productId_fkey")
}

// ‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ä‡∏∏‡∏î (‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ã‡∏™‡πå)
model Proportion_product {
  proportion_product_id Int       @id @default(autoincrement())
  chest                 Decimal?  @db.Decimal(5, 1)
  waist                 Decimal?  @db.Decimal(5, 1)
  hips                  Decimal?  @db.Decimal(5, 1)
  products              Product[]
}

// ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≠‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡πÅ‡∏¢‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÄ‡∏ä‡πà‡∏ô ‡∏ä‡∏∏‡∏î, ‡∏ß‡∏¥‡∏Å, ‡∏û‡∏£‡πá‡∏≠‡∏û)
model ProductPrice {
  productPrice_id Int                 @id @default(autoincrement())
  productId       Int
  type            ProductPrice_status
  price_pri       Decimal             @db.Decimal(10, 2)
  price_test      Decimal             @db.Decimal(10, 2)
  days_test       Int?
  days_pri        Int?
  createdAt       DateTime            @default(now())
  Deposit         Decimal?            @db.Decimal(10, 2) //‡∏£‡∏≤‡∏Ñ‡∏≤‡∏°‡∏±‡∏î‡∏à‡∏≥
  CartItem        CartItem[]
  OrderItem       OrderItem[]
  product         Product             @relation(fields: [productId], references: [product_id])

  @@index([productId], map: "fk_Product_ProductPrice_idx")
}

// =======================
// CART & ORDER SECTION
// =======================

// ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
model Cart {
  cart_id    Int        @id @default(autoincrement())
  customerId Int
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  customer   Customer   @relation(fields: [customerId], references: [customer_id])
  items      CartItem[]

  @@index([customerId], map: "fk_cart_customer_idx")
}

// ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡∏¥‡πâ‡∏ô‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
model CartItem {
  cartItem_id    Int       @id @default(autoincrement())
  cartId         Int
  productId      Int
  productPriceId Int?
  mode           String?   @db.VarChar(10) // "test" ‡∏´‡∏£‡∏∑‡∏≠ "pri"
  startDate      DateTime? @db.DateTime(0) // ‚úÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏ä‡πà‡∏≤
  endDate        DateTime? @db.DateTime(0) // ‚úÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏∑‡∏ô
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  cart    Cart          @relation(fields: [cartId], references: [cart_id])
  product Product       @relation(fields: [productId], references: [product_id])
  price   ProductPrice? @relation(fields: [productPriceId], references: [productPrice_id])

  @@index([cartId], map: "fk_cartItem_cart_idx")
  @@index([productId], map: "fk_cartItem_product_idx")
  @@index([productPriceId], map: "fk_cartItem_price_idx")
}

// ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏´‡∏•‡∏±‡∏Å (order)
model Orders {
  order_id              Int         @id @default(autoincrement())
  customerId            Int
  total_price           Decimal     @db.Decimal(10, 2)
  deposit_amount        Decimal?    @db.Decimal(10, 2)
  promotionPromotion_id Int?
  OrderItem             OrderItem[]
  customer              Customer    @relation(fields: [customerId], references: [customer_id])
  Promotion             Promotion?  @relation(fields: [promotionPromotion_id], references: [promotion_id])
  payments              Payment[]
  shippings             Shipping[]
  Rentals               Rentals[]

  @@index([customerId], map: "fk_order_customer_idx")
  @@index([promotionPromotion_id], map: "Orders_promotionPromotion_id_fkey")
}

// ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
model OrderItem {
  orderItem_id    Int               @id @default(autoincrement())
  orderId         Int
  productId       Int
  productPriceId  Int
  order           Orders            @relation(fields: [orderId], references: [order_id])
  product         Product           @relation(fields: [productId], references: [product_id])
  price           ProductPrice      @relation(fields: [productPriceId], references: [productPrice_id])
  ShippingBoxItem ShippingBoxItem[]

  @@index([orderId], map: "fk_orderItem_order_idx")
  @@index([productId], map: "fk_orderItem_product_idx")
  @@index([productPriceId], map: "fk_orderItem_price_idx")
}

model Favorite {
  favorite_id Int      @id @default(autoincrement())
  customerId  Int
  productId   Int
  created_at  DateTime @default(now())

  customer Customer @relation(fields: [customerId], references: [customer_id])
  product  Product  @relation(fields: [productId], references: [product_id])

  @@unique([customerId, productId])
}

// ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
model Payment {
  payment_id      Int            @id @default(autoincrement())
  orderId         Int
  methodId        Int
  omise_charge_id String         @db.VarChar(100)
  payment_date    DateTime?      @default(now()) @db.DateTime(0)
  payment_amount  Decimal        @db.Decimal(10, 2)
  method          Payment_method @relation(fields: [methodId], references: [payment_method_id])
  order           Orders         @relation(fields: [orderId], references: [order_id])

  @@index([orderId], map: "fk_payment_order_idx")
  @@index([methodId], map: "fk_payment_pmt_idx")
}

// ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
model Payment_method {
  payment_method_id   Int       @id @default(autoincrement())
  payment_method_name String?   @db.VarChar(45)
  payments            Payment[]
}

// ‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î
model Promotion {
  promotion_id Int      @id @default(autoincrement())
  code         String   @unique @db.VarChar(50)
  description  String?  @db.Text
  discount     Decimal  @db.Decimal(10, 2)
  start_date   DateTime
  end_date     DateTime
  is_active    Boolean  @default(true)
  created_at   DateTime @default(now())
  orders       Orders[]
}

// =======================
// SHIPPING SECTION (‡∏´‡∏•‡∏≤‡∏¢‡∏Å‡∏•‡πà‡∏≠‡∏á/‡∏£‡∏´‡∏±‡∏™‡∏û‡∏±‡∏™‡∏î‡∏∏‡πÅ‡∏¢‡∏Å)
// =======================

// ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ (‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏´‡∏•‡∏≤‡∏¢‡∏Å‡∏•‡πà‡∏≠‡∏á)
model Shipping {
  shipping_id     Int                       @id @default(autoincrement())
  orderId         Int
  shipping_date   DateTime?                 @db.DateTime(0)
  shipping_status Shipping_shipping_status?
  shipping_name   String?                   @db.VarChar(45)
  image_slip      String?                   @db.VarChar(255)
  shipping_update DateTime                  @updatedAt

  boxes           ShippingBox[] // ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏¢‡πà‡∏≠‡∏¢‡πÉ‡∏ô‡∏£‡∏≠‡∏ö‡∏ô‡∏µ‡πâ
  order           Orders            @relation(fields: [orderId], references: [order_id])
  ShippingHistory ShippingHistory[]

  @@index([orderId], map: "fk_shipping_order_idx")
}

// ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÉ‡∏ö‡πÉ‡∏ô‡∏£‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á (tracking code ‡∏Ñ‡∏ô‡∏•‡∏∞‡∏≠‡∏±‡∏ô)
model ShippingBox {
  box_id        Int               @id @default(autoincrement())
  shippingId    Int
  tracking_code String            @unique @db.VarChar(20)
  note          String?           @db.VarChar(255)
  shipping      Shipping          @relation(fields: [shippingId], references: [shipping_id])
  items         ShippingBoxItem[]

  @@index([shippingId], map: "fk_box_shipping_idx")
}

// ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÉ‡∏ö
model ShippingBoxItem {
  shippingBoxItem_id Int         @id @default(autoincrement())
  boxId              Int
  orderItemId        Int
  quantity           Int         @default(1)
  box                ShippingBox @relation(fields: [boxId], references: [box_id])
  orderItem          OrderItem   @relation(fields: [orderItemId], references: [orderItem_id])

  @@index([boxId], map: "fk_shippingboxitem_box_idx")
  @@index([orderItemId], map: "fk_shippingboxitem_orderitem_idx")
}

// ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á
model ShippingHistory {
  history_id Int                      @id @default(autoincrement())
  shippingId Int
  status     Shipping_shipping_status
  changed_at DateTime                 @default(now())
  note       String?                  @db.VarChar(255)
  shipping   Shipping                 @relation(fields: [shippingId], references: [shipping_id])

  @@index([shippingId], map: "ShippingHistory_shippingId_fkey")
}

// =======================
// RENTAL & REPORT SECTION
// =======================

// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πà‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏ô
model Rentals {
  rental_id       Int       @id @default(autoincrement())
  customerId      Int
  productId       Int
  orderId         Int?
  rental_date     DateTime? @default(now()) @db.DateTime(0)
  rental_end_date DateTime? @default(now()) @db.DateTime(0)
  total_price     Decimal?  @db.Decimal(10, 2)

  rental_status   Calender_rental_status?
  mode            RentalMode?             @default(TEST)
  rental_datetime DateTime?               @default(now()) @db.DateTime(0)
  rental_update   DateTime?               @updatedAt
  customer        Customer                @relation(fields: [customerId], references: [customer_id])
  product         Product                 @relation(fields: [productId], references: [product_id])
  order           Orders?                 @relation(fields: [orderId], references: [order_id])
  reports         Report[]

  @@index([customerId], map: "FK_customer_id_idx")
  @@index([productId], map: "FK_product_id")
}

// ‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πà‡∏≤ / ‡∏™‡πà‡∏á / ‡∏ã‡∏±‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡∏î‡∏π‡πÅ‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
model DelaySetting {
  delaySetting_id      Int      @id @default(autoincrement())
  delay_ship_days      Int      @default(3) // ‡∏î‡∏µ‡πÄ‡∏•‡∏¢‡πå‡∏Å‡πà‡∏≠‡∏ô‡∏ß‡∏±‡∏ô‡πÄ‡∏ä‡πà‡∏≤ (‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á‡∏Ç‡∏≠‡∏á)
  delay_return_days    Int      @default(3) // ‡∏î‡∏µ‡πÄ‡∏•‡∏¢‡πå‡∏´‡∏•‡∏±‡∏á‡∏Ñ‡∏∑‡∏ô (‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡∏Ç‡∏ô‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö)
  delay_clean_days     Int      @default(5) // ‡∏î‡∏µ‡πÄ‡∏•‡∏¢‡πå‡∏´‡∏•‡∏±‡∏á‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ã‡∏±‡∏Å/‡∏ï‡∏£‡∏ß‡∏à‡πÄ‡∏ä‡πá‡∏Ñ‡∏ä‡∏∏‡∏î
  delay_next_ship_days Int      @default(3) // ‡∏î‡∏µ‡πÄ‡∏•‡∏¢‡πå‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏™‡πà‡∏á‡∏£‡∏≠‡∏ö‡∏ï‡πà‡∏≠‡πÑ‡∏õ (‡∏Å‡∏±‡∏ô‡∏ä‡∏ô‡∏Ñ‡∏¥‡∏ß‡πÉ‡∏´‡∏°‡πà)
  delay_admin_days     Int      @default(2) // ‡∏î‡∏µ‡πÄ‡∏•‡∏¢‡πå‡∏£‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏Å‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô (‡πÉ‡∏ä‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏£‡∏≠‡∏ö‡πÅ‡∏£‡∏Å)
  plus_delay_days      Int? // ‡πÄ‡∏ß‡∏•‡∏≤‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ß‡πâ‡∏ô‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏£‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πà‡∏≤ (‡πÄ‡∏ä‡πà‡∏ô 16 ‡∏ß‡∏±‡∏ô)
  updated_at           DateTime @default(now()) @updatedAt
}

// ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πà‡∏≤
model Report {
  report_id       Int           @id @default(autoincrement())
  productId       Int
  rentalId        Int
  report_topics   String        @db.Text
  report_detail   String?       @db.Text
  report_fine     Decimal?      @db.Decimal(10, 2)
  report_datetime DateTime?     @default(now()) @db.DateTime(0)
  product         Product       @relation(fields: [productId], references: [product_id])
  rental          Rentals       @relation(fields: [rentalId], references: [rental_id])
  images          ReportImage[]

  @@index([productId], map: "fk_report_product_idx")
  @@index([rentalId], map: "fk_report_rental_idx")
}

// ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô
model ReportImage {
  reportimage_id Int    @id @default(autoincrement())
  image_url      String @db.VarChar(255)
  cloudinary_id  String @db.VarChar(255)
  reportId       Int
  report         Report @relation(fields: [reportId], references: [report_id])

  @@index([reportId], map: "fk_reportimage_report_idx")
}

// =======================
// COMMUNICATION & REVIEW SECTION
// =======================

// ‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏ó‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏£‡πâ‡∏≤‡∏ô
model Chat {
  chat_id       Int       @id @default(autoincrement())
  customerId    Int
  chat_detail   String?   @db.Text
  chat_datetime DateTime? @default(now()) @db.DateTime(0)
  customer      Customer  @relation(fields: [customerId], references: [customer_id])

  @@index([customerId], map: "FK_customer_id")
}

// ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
model Review {
  review_id       Int           @id @default(autoincrement())
  customerId      Int
  productId       Int
  review_details  String?       @db.Text
  review_datetime DateTime?     @default(now()) @db.DateTime(0)
  customer        Customer      @relation(fields: [customerId], references: [customer_id])
  product         Product       @relation(fields: [productId], references: [product_id])
  images          ReviewImage[]

  @@index([customerId], map: "fk_review_customer_idx")
  @@index([productId], map: "fk_review_product_idx")
}

// ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
model ReviewImage {
  reviewimage_id Int    @id @default(autoincrement())
  image_url      String @db.VarChar(255)
  cloudinary_id  String @db.VarChar(255)
  reviewId       Int
  review         Review @relation(fields: [reviewId], references: [review_id])

  @@index([reviewId], map: "fk_reviewimage_review_idx")
}

// =======================
// NOTIFICATION SECTION
// =======================

// ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ (‡πÄ‡∏ä‡πà‡∏ô ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠, ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô, ‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô)
model Notification {
  notification_id Int                 @id @default(autoincrement())
  customerId      Int
  title           String              @db.VarChar(100)
  description     String              @db.Text
  type            Notification_status
  is_read         Boolean             @default(false)
  created_at      DateTime            @default(now())
  user            Customer            @relation(fields: [customerId], references: [customer_id])

  @@index([customerId], map: "Notification_customerId_fkey")
}

// =======================
// OTHER DATA
// =======================

// ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î / ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà (‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤)
model County {
  county_id   Int    @id @default(autoincrement())
  county_name String @db.VarChar(40)
}
